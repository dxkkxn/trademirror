version: "3"
services:
  # ------- DATABASE ----------
  redis:
    image: ${REDIS_IMAGE}
    container_name: ${REDIS_CONTAINER}
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - trade-mirror-network
  rediscommander:
    image: ${REDIS_COMMANDER_IMAGE}
    container_name: ${REDIS_COMMANDER_CONTAINER}
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - ${REDIS_COMMANDER_PORT}:8081
    networks:
      - trade-mirror-network
  # -------------------------------
  # ---------BACKEND --------------
  restapi:
    image: ${RESTAPI_IMAGE}
    container_name: ${RESTAPI_CONTAINER}
    build:
      context: ${PWD}
      dockerfile: ./rest_api/Dockerfile
    env_file:
      - ./rest_api/.env.test
    depends_on:
      - redis
    ports:
      - ${RESTAPI_PORT}:8000
    networks:
      - trade-mirror-network
  # -------------------------------
  # ---------- FRONTEND -----------
  frontend:
    image: ${FRONTEND_IMAGE}
    container_name: ${FRONTEND_CONTAINER}
    build:
      context: ${PWD}
      dockerfile: ./front_end/Dockerfile
    env_file:
      - ./front_end/.env.test
    depends_on:
      - restapi
    ports:
      - ${FRONTEND_PORT}:4500
    networks:
      - trade-mirror-network
  #---------------------------------
  # ------------KAFKA---------------
  zookeper:
    image: ${ZOOKEPER_IMAGE}
    container_name: ${ZOOKEPER_CONTAINER}
    ports:
      - ${ZOOKEPER_PORT}:2181
  kafka:
    image: ${KAFKA_IMAGE}
    container_name: ${KAFKA_CONTAINER}
    build:
      context: ${PWD}
      dockerfile: ./kafka/Dockerfile
    ports:
      - ${KAFKA_PORT}:9092
    environment:
      TZ: UTC
      ZOOKEPER_HOST: ${ZOOKEPER_HOST}
      ZOOKEEPER_PORT: ${ZOOKEPER_PORT}
    depends_on:
      - zookeper
    # command: bash -c "./init_kafka_topic.sh"

  # this should be implemented after
  # nginx:
  #   build:
  #     context: ${PWD}
  #     dockerfile: ./nginx/Dockerfile
  #   depends_on:
  #     - restapi
  #     - frontend
  #   restart: always
  #   ports:
  #     - ${NGINX_PORT}:80
  #   networks:
  #     - trade-mirror-network
  # auth:
  #   image: ${AUTH_IMAGE}
  #   container_name: ${AUTH_CONTAINER}
  #   build:
  #     context: ${PWD}
  #     dockerfile: ./auth/Dockerfile
  #   env_file:
  #     - ./auth/.env
  #   depends_on:
  #     - redis
  #   networks:
  #     - trade-mirror-network
networks:
  trade-mirror-network:
    driver: bridge
