version: "3"
services:
  redis:
    image: ${REDIS_IMAGE}
    # image: ${REDIS_IMAGE}
    container_name: ${REDIS_CONTAINER}
    build:
      context: ${PWD}
      dockerfile: ./redis/Dockerfile
    env_file:
      - ./redis/.env.test
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - trade-mirror-network
  restapi:
    image: ${RESTAPI_IMAGE}
    container_name: ${RESTAPI_CONTAINER}
    build:
      context: ${PWD}
      dockerfile: ./rest_api/Dockerfile
    env_file:
      - ./rest_api/.env.test
    depends_on:
      - redis
    ports:
      - ${REST_API_PORT}:8000
    networks:
      - trade-mirror-network
  frontend:
    image: ${FRONTEND_IMAGE}
    container_name: ${FRONTEND_CONTAINER}
    build:
      context: ${PWD}
      dockerfile: ./front_end/Dockerfile
    env_file:
      - ./front_end/.env.test
    # environment:
      # - BACKEND_URL="http://restapi:8000"
    depends_on:
      - restapi
    ports:
      - ${FRONTEND_PORT}:4500
    networks:
      - trade-mirror-network
  nginx:
    build:
      context: ${PWD}
      dockerfile: ./nginx/Dockerfile
    depends_on:
      - restapi
      - frontend
    restart: always
    ports:
      - ${NGINX_PORT}:80
  # auth:
  #   image: ${AUTH_IMAGE}
  #   container_name: ${AUTH_CONTAINER}
  #   build:
  #     context: ${PWD}
  #     dockerfile: ./auth/Dockerfile
  #   env_file:
  #     - ./auth/.env
  #   depends_on:
  #     - redis
  #   networks:
  #     - trade-mirror-network
networks:
  trade-mirror-network:
    driver: bridge
